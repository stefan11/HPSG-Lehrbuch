% -*-  coding:utf-8; mode:trale-prolog   -*-
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%   $RCSfile: lexicon.pl,v $
%%  $Revision: 1.10 $
%%      $Date: 2006/02/26 18:08:12 $
%%     Author: Stefan Mueller (Stefan.Mueller@cl.uni-bremen.de)
%%    Purpose: Eine kleine Spielzeuggrammatik für die Lehre
%%   Language: Trale
%      System: TRALE 2.7.5 (release ) under Sicstus 3.10.1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


das ---> (word,
  cat:(head:(det,
             spec:cont:Cont,
             case:nom_or_acc,
             gen:mas_or_neu),
       subcat:[] ),
  cont:(Quant,
        def,
        restind:Cont),
  qstore:[Quant]).


der ---> (word,
  cat:(head:(det,
             spec:cont:Cont,
             case:nom,
             gen:mas),
       subcat:[] ),
  cont:(Quant,
        def,
        restind:Cont),
  qstore:[Quant]).

% wir gedenken der Frau
% wir helfen der Frau
der ---> (word,
  cat:(head:(det,
             spec:cont:Cont,
             case:gen_or_dat,
             gen:fem),
       subcat:[] ),
  cont:(Quant,
        def,
        restind:Cont),
  qstore:[Quant]).


% dem Mann/Buch
dem ---> (word,
  cat:(head:(det,
             spec:cont:Cont,
             case:dat,
             gen:mas_or_neu),
       subcat:[] ),
  cont:(Quant,
        def,
        restind:Cont),
  qstore:[Quant]).

% den Mann
den ---> (word,
  cat:(head:(det,
             spec:cont:Cont,
             case:acc,
             gen:mas),
       subcat:[] ),
  cont:(Quant,
        def,
        restind:Cont),
  qstore:[Quant]).


des ---> (word,
  cat:(head:(det,
             spec:cont:Cont,
             case:gen,
             gen:mas_or_neu),
       subcat:[] ),
  cont:(Quant,
        def,
        restind:Cont),
  qstore:[Quant]).

die ---> (word,
  cat:(head:(det,
             spec:cont:Cont,
             case:nom_or_acc,
             gen:fem),
       subcat:[] ),
  cont:(Quant,
        def,
        restind:Cont),
  qstore:[Quant]).


mann ---> (word,
  cat:(head:(noun,
             case:(Case,
                   nom_or_dat_or_acc)),
       subcat:[cat:(head:(det,
                         case:Case,
                         gen:mas),
                    subcat:[]) ] ),
  cont:(ind:(Ind,
             per:third,
             num:sg,
             gen:mas),
        restr:[(mann,
                arg1:Ind)]),
  qstore:[]).

mannes ---> (word,
  cat:(head:(noun,
             case:gen),
       subcat:[cat:(head:(det,
                          case:gen,
                          gen:mas),
                    subcat:[]) ] ),
  cont:(ind:(Ind,
             per:third,
             num:sg,
             gen:mas),
        restr:[(mann,
                arg1:Ind)]),
  qstore:[]).

mörder ---> (word,
  cat:(head:(noun,
             case:(Case,
                   nom_or_dat_or_acc)),
       subcat:[cat:(head:(det,
                          case:Case,
                          gen:mas),
                    subcat:[]) ] ),
  cont:(ind:(Ind,
             per:third,
             num:sg,
             gen:mas),
        restr:[(mörder,
                arg1:Ind)]),
  qstore:[]).

mörders ---> (word,
  cat:(head:(noun,
             case:gen),
       subcat:[cat:(head:(det,
                          case:gen,
                          gen:mas),
                    subcat:[]) ] ),
  cont:(ind:(Ind,
             per:third,
             num:sg,
             gen:mas),
        restr:[(mörder,
                arg1:Ind)]),
  qstore:[]).


frau ---> (word,
  cat:(head:(noun,
             case:Case),
       subcat:[cat:(head:(det,
                          case:Case,
                          gen:fem),
                    subcat:[]) ] ),
  cont:(ind:(Ind,
             per:third,
             num:sg,
             gen:fem),
        restr:[(frau,
                arg1:Ind)]),
  qstore:[]).

speisekammer ---> (word,
  cat:(head:(noun,
             case:Case),
       subcat:[cat:(head:(det,
                          case:Case,
                          gen:fem),
                    subcat:[]) ] ),
  cont:(ind:(Ind,
             per:third,
             num:sg,
             gen:mas),
        restr:[(speisekammer,
                arg1:Ind)]),
  qstore:[]).

wurst ---> (word,
  cat:(head:(noun,
             case:Case),
       subcat:[cat:(head:(det,
                          case:Case,
                          gen:fem),
                    subcat:[]) ] ),
  cont:(ind:(Ind,
             per:third,
             num:sg,
             gen:mas),
        restr:[(wurst,
                arg1:Ind)]),
  qstore:[]).


buch ---> (word,
  cat:(head:(noun,
             case:(Case,
                   nom_or_dat_or_acc)),
       subcat:[cat:(head:(det,
                          case:Case,
                          gen:neu),
                    subcat:[]) ] ),
  cont:(ind:(Ind,
             per:third,
             num:sg,
             gen:neu),
        restr:[(buch,
                arg1:Ind)]),
  qstore:[]).


buches ---> (word,
  cat:(head:(noun,
             case:gen),
       subcat:[cat:(head:(det,
                          case:gen,
                          gen:neu),
                    subcat:[]) ] ),
  cont:(ind:(Ind,
             per:third,
             num:sg,
             gen:neu),
        restr:[(buch,
                arg1:Ind)]),
  qstore:[]).


er ---> (word,
  cat:(head:(noun,
             case:nom),
       subcat:[]),
  cont:(ind:(per:third,
             num:sg,
             gen:mas),
        restr:[]),
  qstore:[]).

ihm ---> (word,
  cat:(head:(noun,
             case:dat),
       subcat:[]),
  cont:(ind:(per:third,
             num:sg,
             gen:mas),
        restr:[]),
  qstore:[]).

schläft ---> (word,
  cat:(head:(verb,
             vform:fin),
       subcat:[(cat:(head:(noun,
                           case:nom),
                     subcat:[]),
                cont:ind:Ind) ] ),
  cont:(schlafen,
        arg1:Ind),
  qstore:[]).

graut ---> (word,
  cat:(head:(verb,
             vform:fin),
       subcat:[(cat:(head:(noun,
                           case:dat),
                     subcat:[]),
                cont:ind:Ind) ] ),
  cont:(grauen,
        arg2:Ind),
  qstore:[]).


jagt ---> (word,
  cat:(head:(verb,
             vform:fin),
       subcat:[ (cat:(head:(noun,
                            case:nom),
                      subcat:[]),
                    cont:ind:Ind1),
                (cat:(head:(noun,
                            case:acc),
                      subcat:[]),
                    cont:ind:Ind2) ] ),
  cont:(jagen,
        arg1:Ind1,
        arg2:Ind2),
  qstore:[]).

kennt ---> (word,
  cat:(head:(verb,
             vform:fin),
       subcat:[ (cat:(head:(noun,
                            case:nom),
                      subcat:[]),
                    cont:ind:Ind1),
                (cat:(head:(noun,
                            case:acc),
                      subcat:[]),
                    cont:ind:Ind2) ] ),
  cont:(kennen,
        arg1:Ind1,
        arg2:Ind2),
  qstore:[]).

gab ---> (word,
  cat:(head:(verb,
             vform:fin),
       subcat:[ (cat:(head:(noun,
                            case:nom),
                      subcat:[]),
                    cont:ind:Ind1),
                (cat:(head:(noun,
                            case:acc),
                      subcat:[]),
                    cont:ind:Ind2),
                (cat:(head:(noun,
                            case:dat),
                      subcat:[]),
                    cont:ind:Ind3) ] ),
  cont:(geben,
        arg1:Ind1,
        arg2:Ind2,
        arg3:Ind3),
  qstore:[]).


gibt ---> (word,
  cat:(head:(verb,
             vform:fin),
       subcat:[ (cat:(head:(noun,
                            case:nom),
                      subcat:[]),
                    cont:ind:Ind1),
                (cat:(head:(noun,
                            case:acc),
                      subcat:[]),
                    cont:ind:Ind2),
                (cat:(head:(noun,
                            case:dat),
                      subcat:[]),
                    cont:ind:Ind3) ] ),
  cont:(geben,
        arg1:Ind1,
        arg2:Ind2,
        arg3:Ind3),
  qstore:[]).

denkt ---> (word,
  cat:(head:(verb,
             vform:fin),
       subcat:[ (cat:(head:(noun,
                            case:nom),
                      subcat:[]),
                 cont:ind:Ind1),
                (cat:(head:(prep,
                            pform:an_pform,
                            case:acc),
                      subcat:[]),
                 cont:ind:Ind2) ] ),
  cont:(denken_an,
        arg1:Ind1,
        arg2:Ind2),
  qstore:[]).


an ---> (word,
  cat:(head:(prep,
             pform:an_pform,
             case:Cas),
       subcat:[(cat:(head:(noun,
                           case:Cas),
                     subcat:[]),
                cont:Cont) ] ),
  cont:Cont,
  qstore:[]).



interessante ---> (word,
    cat:(head:(attr_adj,
               mod:(cat:(head:noun,
                         subcat:[_]),
                    cont:(ind:Ind,
                          restr:Restr))),
         subcat:[ ] ),
  cont:(ind:Ind,
        restr:[(interessant,
                arg1:Ind)|Restr]),
  qstore:[]).

treue ---> (word,
    cat:(head:(attr_adj,
               mod:(cat:(head:noun,
                         subcat:[_]),
                    cont:(ind:Ind1,
                          restr:Restr))),
         subcat:[(cat:(head:(noun,
                             case:dat),
                       subcat:[]),
                  cont:ind:Ind2) ] ),
  cont:(ind:Ind1,
        restr:[(treu,
                arg1:Ind1,
                arg2:Ind2)|Restr]),
  qstore:[]).

mutmaßliche ---> (word,
    cat:(head:(attr_adj,
               mod:(cat:(head:noun,
                         subcat:[_]),
                    cont:(ind:Ind,
                          restr:Restr))),
         subcat:[ ] ),
  cont:(ind:Ind,
        restr:[(mutmaßlich,
                psoa_arg:Restr)]),
  qstore:[]).

in ---> (word,
    cat:(head:(mod_prep,
               mod:(cat:(head:noun,
                         subcat:[_]),
                    cont:(ind:Ind,
                          restr:Restr))),
         subcat:[ (cat:(head:(noun,
                              case:dat),
                        subcat:[]),
                   cont:ind:Ind2) ] ),
  cont:(ind:Ind,
        restr:[(in,
                arg1:Ind,
                arg2:Ind2)|Restr]),
  qstore:[]).




seine ---> (word,
    cat:(head:(det,
               case:nom_or_acc,
               spec:cont:(ind:NInd,
                          restr:NRestr)),
         subcat:[ ] ),
  cont:(ind:(Ind,
             per:third,
             num:sg,
             gen:mas_or_neu),
        restr:[]),
  qstore:[(def,
           restind:(ind:NInd,
                    restr:[(besitzen,
                            arg2:Ind,
                            arg3:NInd)|NRestr]))]).

seiner ---> (word,
    cat:(head:(det,
               case:gen_or_dat,
               spec:cont:(ind:NInd,
                          restr:NRestr)),
         subcat:[ ] ),
  cont:(ind:(Ind,
             per:third,
             num:sg,
             gen:mas_or_neu),
        restr:[]),
  qstore:[(def,
           restind:(ind:NInd,
                    restr:[(besitzen,
                            arg2:Ind,
                            arg3:NInd)|NRestr]))]).
